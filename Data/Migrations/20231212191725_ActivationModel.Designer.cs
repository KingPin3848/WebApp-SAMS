// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAMS.Data;

#nullable disable

namespace SAMS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231212191725_ActivationModel")]
    partial class ActivationModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SAMS.Models.ActivationModel", b =>
                {
                    b.Property<string>("ActivationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EnableUserExperience")
                        .HasColumnType("bit");

                    b.HasKey("ActivationCode");

                    b.ToTable("ActivationModel");
                });

            modelBuilder.Entity("SAMS.Models.ActiveCourseInfoModel", b =>
                {
                    b.Property<string>("courseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("courseBellNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courseLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courseTeacherEmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courseTeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roomNumber")
                        .HasColumnType("int");

                    b.Property<string>("wingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("courseId");

                    b.ToTable("activeCourseInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.AdminInfoModel", b =>
                {
                    b.Property<string>("adminID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("adminID");

                    b.ToTable("adminInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.AttendanceOfficeMemberModel", b =>
                {
                    b.Property<string>("aoMemberID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("aoMemberEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aoMemberFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aoMemberLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aoMemberMiddleNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aoMemberPhoneMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aoMemberPreferredNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("aoMemberID");

                    b.ToTable("attendanceOfficeMemberModels");
                });

            modelBuilder.Entity("SAMS.Models.DailyBellScheduleModel", b =>
                {
                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("BellName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.HasKey("StartTime");

                    b.ToTable("dailyBellScheduleModels");
                });

            modelBuilder.Entity("SAMS.Models.DeveloperInfoModel", b =>
                {
                    b.Property<int>("developerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("developerID"), 1L, 1);

                    b.Property<string>("developerEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("developerFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("developerLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("developerMiddleNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("developerPreferredNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("developerID");

                    b.ToTable("developerInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.EASuportInfoModel", b =>
                {
                    b.Property<string>("eaID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("eaEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eaFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eaLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eaMiddleNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eaPhoneMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eaPreferredNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eaStudentManaged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("eaID");

                    b.ToTable("eASuportInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.ExtendedAvesBellScheduleModel", b =>
                {
                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("BellName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.HasKey("StartTime");

                    b.ToTable("extendedAvesModels");
                });

            modelBuilder.Entity("SAMS.Models.FastPassModel", b =>
                {
                    b.Property<string>("fastPassIDMod")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("bellNumber")
                        .HasColumnType("int");

                    b.Property<string>("endLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<string>("studentNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fastPassIDMod");

                    b.ToTable("fastPassModels");
                });

            modelBuilder.Entity("SAMS.Models.HallPassInfoModel", b =>
                {
                    b.Property<string>("HallPassID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("bellNumber")
                        .HasColumnType("int");

                    b.Property<string>("endLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hallPassAddressee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hallPassAssignedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<string>("studentNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HallPassID");

                    b.ToTable("hallPassInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.LawEnforcementInfoModel", b =>
                {
                    b.Property<string>("lawenfID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("laweEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("laweFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("laweLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("laweMiddleNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawePhoneMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawePreferredNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lawenfID");

                    b.ToTable("lawEnforcementInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.NurseInfoModel", b =>
                {
                    b.Property<string>("nurseID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nurseEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nurseFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nurseLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nurseMiddleNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nursePhoneMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nursePreferredNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("nurseID");

                    b.ToTable("nurseInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.PassRequestInfoModel", b =>
                {
                    b.Property<int>("passRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("passRequestId"), 1L, 1);

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("bellNumber")
                        .HasColumnType("int");

                    b.Property<string>("endLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hallPassAddressee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hallPassAssignedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<string>("studentNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("passRequestId");

                    b.ToTable("passRequestInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.PepRallyBellScheduleModel", b =>
                {
                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("BellName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.HasKey("StartTime");

                    b.ToTable("pepRallyBellScheduleModels");
                });

            modelBuilder.Entity("SAMS.Models.RoomLocationInfoModel", b =>
                {
                    b.Property<string>("roomNumberMod")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("roomCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wingNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roomNumberMod");

                    b.ToTable("roomLocationInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.StudentInfoModel", b =>
                {
                    b.Property<int>("studentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentID"), 1L, 1);

                    b.Property<string>("parentguard1EmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parentguard1NameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parentguard2EmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parentguard2NameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentCounselorEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentCounselorNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentEAEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentEANameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentMiddleNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentPhoneMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentPreferredNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("studentID");

                    b.ToTable("studentInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.StudentScheduleInfoModel", b =>
                {
                    b.Property<int>("studentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentID"), 1L, 1);

                    b.Property<string>("avesBellRoomCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bell1CourseCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bell2CourseCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bell3CourseCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bell4CourseCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bell5CourseCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bell6CourseCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bell7CourseCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lunchCodeMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("studentID");

                    b.ToTable("studentScheduleInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.SubstituteInfoModel", b =>
                {
                    b.Property<string>("subID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("managedTeacherMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subMiddleNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subPhoneMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subPreferredNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subID");

                    b.ToTable("substituteInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.SynnLabQRNodeModel", b =>
                {
                    b.Property<string>("scannerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("modelNumberMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scannerDeviceIPAddressMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scannerLabelMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scannerMacAddressMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("synnlabRoomMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("synnlabRoomSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("scannerID");

                    b.ToTable("synnLabQRNodeModels");
                });

            modelBuilder.Entity("SAMS.Models.TeacherInfoModel", b =>
                {
                    b.Property<string>("teacherID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("teacherEmailMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherFirstNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherLastNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherMiddleNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherPhoneMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherPreferredNameMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("teacherID");

                    b.ToTable("teacherInfoModels");
                });

            modelBuilder.Entity("SAMS.Models.TwoHrDelayBellScheduleModel", b =>
                {
                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("BellName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.HasKey("StartTime");

                    b.ToTable("twoHrDelayBellScheduleModels");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
